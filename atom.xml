<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://yinyayun.github.io/</id>
    <title>殷亚云的博客</title>
    <updated>2019-07-12T00:53:20.337Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://yinyayun.github.io/"/>
    <link rel="self" href="https://yinyayun.github.io//atom.xml"/>
    <subtitle>化身石桥，受五百年风吹雨打</subtitle>
    <logo>https://yinyayun.github.io//images/avatar.png</logo>
    <icon>https://yinyayun.github.io//favicon.ico</icon>
    <rights>All rights reserved 2019, 殷亚云的博客</rights>
    <entry>
        <title type="html"><![CDATA[VirtualBox Centos磁盘扩容笔记]]></title>
        <id>https://yinyayun.github.io//post/6_fDKITDK</id>
        <link href="https://yinyayun.github.io//post/6_fDKITDK">
        </link>
        <updated>2019-01-30T11:10:21.000Z</updated>
        <summary type="html"><![CDATA[<h2 id="vmdk格式扩容">VMDK格式扩容</h2>
<p>估计是因为<code>vmdk</code>是VMWare的格式，所以VirtualBox并不直接支持对<code>vmdk</code>扩容，所以需要先转为<code>vdi</code>格式进行扩容。</p>
<pre><code class="language-shell">VBoxManage clonehd &quot;virtualdisk.vmdk&quot; &quot;new-virtualdisk.vdi&quot; --format vdi
VBoxManage modifyhd &quot;new-virtualdisk.vdi&quot; --resize 51200
//如果需要还可以转回去
VBoxManage clonehd &quot;new-virtualdisk.vdi&quot; &quot;virtualdisk.vmdk&quot; --format vmdk
</code></pre>
]]></summary>
        <content type="html"><![CDATA[<h2 id="vmdk格式扩容">VMDK格式扩容</h2>
<p>估计是因为<code>vmdk</code>是VMWare的格式，所以VirtualBox并不直接支持对<code>vmdk</code>扩容，所以需要先转为<code>vdi</code>格式进行扩容。</p>
<pre><code class="language-shell">VBoxManage clonehd &quot;virtualdisk.vmdk&quot; &quot;new-virtualdisk.vdi&quot; --format vdi
VBoxManage modifyhd &quot;new-virtualdisk.vdi&quot; --resize 51200
//如果需要还可以转回去
VBoxManage clonehd &quot;new-virtualdisk.vdi&quot; &quot;virtualdisk.vmdk&quot; --format vmdk
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Docker入门整理]]></title>
        <id>https://yinyayun.github.io//post/HjfEYHyRj</id>
        <link href="https://yinyayun.github.io//post/HjfEYHyRj">
        </link>
        <updated>2019-01-25T11:08:28.000Z</updated>
        <summary type="html"><![CDATA[<h2 id="docker介绍">Docker介绍</h2>
<p>对开发和管理人员来说，docker是一个用容器开发、发布、运行应用程序的平台。Docker主要包含两个概念，镜像（Image）、容器（container）、Docker Registry：</p>
<ul>
<li>
<p>镜像 ，镜像是一个可执行的package，包含程序运行需要的一切，如代码、库（libraries）、环境变量、配置文件等等</p>
</li>
<li>
<p>容器，容器是镜像的实例，可以通过<code>docker ps</code>查看当前运行的所有容器进程。</p>
</li>
<li>
<p>Docker Registry，镜像的集中式存储管理服务，一个Docker Registry包含多个仓库（ Repository ） ， 每个仓库可以包含多个标签（ Tag ） ，每个标签对应一个镜像。</p>
</li>
</ul>
]]></summary>
        <content type="html"><![CDATA[<h2 id="docker介绍">Docker介绍</h2>
<p>对开发和管理人员来说，docker是一个用容器开发、发布、运行应用程序的平台。Docker主要包含两个概念，镜像（Image）、容器（container）、Docker Registry：</p>
<ul>
<li>
<p>镜像 ，镜像是一个可执行的package，包含程序运行需要的一切，如代码、库（libraries）、环境变量、配置文件等等</p>
</li>
<li>
<p>容器，容器是镜像的实例，可以通过<code>docker ps</code>查看当前运行的所有容器进程。</p>
</li>
<li>
<p>Docker Registry，镜像的集中式存储管理服务，一个Docker Registry包含多个仓库（ Repository ） ， 每个仓库可以包含多个标签（ Tag ） ，每个标签对应一个镜像。</p>
</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用JNI封装Faiss]]></title>
        <id>https://yinyayun.github.io//post/g0S9hEebM</id>
        <link href="https://yinyayun.github.io//post/g0S9hEebM">
        </link>
        <updated>2019-01-18T11:03:06.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[JNI开发整理]]></title>
        <id>https://yinyayun.github.io//post/mpuD1E0R5</id>
        <link href="https://yinyayun.github.io//post/mpuD1E0R5">
        </link>
        <updated>2019-01-08T11:00:49.000Z</updated>
        <summary type="html"><![CDATA[<p>在进行JNI开发之前，我们必须要了解下面一些东西，首先JNI开发的流程，再然后我们需要了解一下Native和Java中类型映射关系，以及JVM中已经为我们提供的一些常用JNI函数，最后再了解一下C/C++开发的一些注意事项。</p>
]]></summary>
        <content type="html"><![CDATA[<p>在进行JNI开发之前，我们必须要了解下面一些东西，首先JNI开发的流程，再然后我们需要了解一下Native和Java中类型映射关系，以及JVM中已经为我们提供的一些常用JNI函数，最后再了解一下C/C++开发的一些注意事项。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Faiss教程翻译]]></title>
        <id>https://yinyayun.github.io//post/JiVM3YKPA</id>
        <link href="https://yinyayun.github.io//post/JiVM3YKPA">
        </link>
        <updated>2018-12-27T10:41:18.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[点积量化(Product Quantizer)]]></title>
        <id>https://yinyayun.github.io//post/UjeaMrCsE</id>
        <link href="https://yinyayun.github.io//post/UjeaMrCsE">
        </link>
        <updated>2018-12-19T10:03:17.000Z</updated>
        <summary type="html"><![CDATA[<blockquote>
<p>本文用例引用至 <a href="http://mccormickml.com/2017/10/13/product-quantizer-tutorial-part-1">product-quantizer-tutorial</a></p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p>本文用例引用至 <a href="http://mccormickml.com/2017/10/13/product-quantizer-tutorial-part-1">product-quantizer-tutorial</a></p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python module加载机制剖析]]></title>
        <id>https://yinyayun.github.io//post/jH_HzuYXb</id>
        <link href="https://yinyayun.github.io//post/jH_HzuYXb">
        </link>
        <updated>2018-12-17T10:01:50.000Z</updated>
        <summary type="html"><![CDATA[<p>之前实现了python module多版本动态加载，但是在最近一次一个小哥上传的模型中居然有对<code>.so</code>文件的import，十万只草泥马，Python居然还有这种操作，所以再一次对Python的import流程做了一次梳理。</p>
]]></summary>
        <content type="html"><![CDATA[<p>之前实现了python module多版本动态加载，但是在最近一次一个小哥上传的模型中居然有对<code>.so</code>文件的import，十万只草泥马，Python居然还有这种操作，所以再一次对Python的import流程做了一次梳理。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[记一次python段错误排查经历]]></title>
        <id>https://yinyayun.github.io//post/6wTmKR_f0</id>
        <link href="https://yinyayun.github.io//post/6wTmKR_f0">
        </link>
        <updated>2018-12-07T09:45:36.000Z</updated>
        <summary type="html"><![CDATA[<p>最近被python折腾惨了，所以分享一次segfault错误排查的经历。</p>
]]></summary>
        <content type="html"><![CDATA[<p>最近被python折腾惨了，所以分享一次segfault错误排查的经历。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linux下Eclipse以及常用插件安装]]></title>
        <id>https://yinyayun.github.io//post/p1QEe9OVk</id>
        <link href="https://yinyayun.github.io//post/p1QEe9OVk">
        </link>
        <updated>2018-11-30T09:44:39.000Z</updated>
        <summary type="html"><![CDATA[<p>近期从windowd换了到了Centos上进行开发，就系统而言，体验挺棒的，挺干净的，而且常用软件支持都挺好的。</p>
]]></summary>
        <content type="html"><![CDATA[<p>近期从windowd换了到了Centos上进行开发，就系统而言，体验挺棒的，挺干净的，而且常用软件支持都挺好的。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[记一次Python服务实例静默退出排查]]></title>
        <id>https://yinyayun.github.io//post/4d8w7j_we</id>
        <link href="https://yinyayun.github.io//post/4d8w7j_we">
        </link>
        <updated>2018-11-26T09:42:23.000Z</updated>
        <summary type="html"><![CDATA[<p>这段时间发现一个python的服务实例经常静默退出，从应用日志里未找到任何异常现场，一切都很正常。</p>
<p>怎么办呢，首先想到的就是完善日志，应用启动入口try住，捕获BaseException异常进行输出，打包上线。</p>
<p>什么，又退出了，看看解释器层面有没有日志，Oh no，这不是JVM，没找到Python解释器层面有任何日志记录，鄙视Python。</p>
]]></summary>
        <content type="html"><![CDATA[<p>这段时间发现一个python的服务实例经常静默退出，从应用日志里未找到任何异常现场，一切都很正常。</p>
<p>怎么办呢，首先想到的就是完善日志，应用启动入口try住，捕获BaseException异常进行输出，打包上线。</p>
<p>什么，又退出了，看看解释器层面有没有日志，Oh no，这不是JVM，没找到Python解释器层面有任何日志记录，鄙视Python。</p>
]]></content>
    </entry>
</feed>